// <auto-generated />
using System;
using LMSSolution.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMSSolution.Data.Migrations
{
    [DbContext(typeof(LMSDbContext))]
    partial class LMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMSSolution.Data.Entities.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreditClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Shiff")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreditClassId");

                    b.ToTable("Attendances", (string)null);
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("MajorId");

                    b.ToTable("Classes", (string)null);
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Courses", (string)null);
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.CreditClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("CreditClasses", (string)null);
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Examination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExamineMethodId")
                        .HasColumnType("int");

                    b.Property<int>("Shiff")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamineMethodId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Examinations", (string)null);
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.ExamineMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ExamineMethods", (string)null);
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreditClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Shiff")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CreditClassId");

                    b.ToTable("Lessons", (string)null);
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Major", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descrition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Majors", (string)null);
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfLesson")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subjects", (string)null);
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.SubjectMajor", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId", "MajorId");

                    b.HasIndex("MajorId");

                    b.ToTable("SubjectMajors", (string)null);
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Attendance", b =>
                {
                    b.HasOne("LMSSolution.Data.Entities.CreditClass", "CreditClass")
                        .WithMany("Attendances")
                        .HasForeignKey("CreditClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditClass");
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Class", b =>
                {
                    b.HasOne("LMSSolution.Data.Entities.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSSolution.Data.Entities.Major", "Major")
                        .WithMany("Classes")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.CreditClass", b =>
                {
                    b.HasOne("LMSSolution.Data.Entities.Subject", "Subject")
                        .WithMany("CreditClasses")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Examination", b =>
                {
                    b.HasOne("LMSSolution.Data.Entities.ExamineMethod", "ExamineMethod")
                        .WithMany("Examinations")
                        .HasForeignKey("ExamineMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSSolution.Data.Entities.Subject", "Subject")
                        .WithMany("Examinations")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamineMethod");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Lesson", b =>
                {
                    b.HasOne("LMSSolution.Data.Entities.CreditClass", "CreditClass")
                        .WithMany("Lessons")
                        .HasForeignKey("CreditClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditClass");
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.SubjectMajor", b =>
                {
                    b.HasOne("LMSSolution.Data.Entities.Major", "Major")
                        .WithMany("SubjectMajors")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSSolution.Data.Entities.Subject", "Subject")
                        .WithMany("SubjectMajors")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Course", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.CreditClass", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.ExamineMethod", b =>
                {
                    b.Navigation("Examinations");
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Major", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("SubjectMajors");
                });

            modelBuilder.Entity("LMSSolution.Data.Entities.Subject", b =>
                {
                    b.Navigation("CreditClasses");

                    b.Navigation("Examinations");

                    b.Navigation("SubjectMajors");
                });
#pragma warning restore 612, 618
        }
    }
}
